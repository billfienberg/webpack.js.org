(window.webpackJsonp=window.webpackJsonp||[]).push([[117],{411:function(n,s,a){"use strict";a.r(s),s.default='<p><a href="https://npmjs.com/package/stylus-loader"><img src="https://img.shields.io/npm/v/stylus-loader.svg" alt="npm"></a>\n<a href="https://nodejs.org/"><img src="https://img.shields.io/node/v/stylus-loader.svg" alt="node"></a>\n<a href="https://david-dm.org/webpack-contrib/stylus-loader"><img src="https://david-dm.org/webpack-contrib/stylus-loader.svg" alt="deps"></a>\n<a href="https://github.com/webpack-contrib/stylus-loader/actions"><img src="https://github.com/webpack-contrib/stylus-loader/workflows/stylus-loader/badge.svg" alt="tests"></a>\n<a href="https://codecov.io/gh/webpack-contrib/stylus-loader"><img src="https://codecov.io/gh/webpack-contrib/stylus-loader/branch/master/graph/badge.svg" alt="cover"></a>\n<a href="https://gitter.im/webpack/webpack"><img src="https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg" alt="chat"></a>\n<a href="https://packagephobia.now.sh/result?p=stylus-loader"><img src="https://packagephobia.now.sh/badge?p=stylus-loader" alt="size"></a></p>\n<p>A Stylus loader for webpack. Compiles Styl to CSS.</p>\n<h2 id="getting-started">Getting Started<a href="#getting-started" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>To begin, you\'ll need to install <code>stylus</code> and <code>stylus-loader</code>:</p>\n<pre><code class="hljs language-console">$ npm install stylus stylus-loader --save-dev\n</code></pre>\n<p>Then add the loader to your <code>webpack</code> config. For example:</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// compiles Styl to CSS</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<p>And run <code>webpack</code> via your preferred method.</p>\n<h2 id="options">Options<a href="#options" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<table>\n<thead>\n<tr>\n<th align="center">Name</th>\n<th align="center">Type</th>\n<th align="center">Default</th>\n<th align="left">Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#stylusoptions"><code>stylusOptions</code></a></strong><p class="description mobile"><code>{Object\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Object\\|Function}</code></td>\n<td align="center"><code>{}</code></td>\n<td align="left">Options for Stylus.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#sourcemap"><code>sourceMap</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>compiler.devtool</code></td>\n<td align="left">Enables/Disables generation of source maps.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#webpackimporter"><code>webpackImporter</code></a></strong><p class="description mobile"><code>{Boolean}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{Boolean}</code></td>\n<td align="center"><code>true</code></td>\n<td align="left">Enables/Disables the default Webpack importer.</td>\n</tr>\n<tr>\n<td align="center"><div class="title"><p>Name</p><p>Type</p><p>Default</p><p>Description</p></div>\n<div class="content"><p><strong><a href="#additionaldata"><code>additionalData</code></a></strong><p class="description mobile"><code>{String\\|Function}</code></p></p></div></td>\n<td align="center" class="description desktop"><code>{String\\|Function}</code></td>\n<td align="center"><code>undefined</code></td>\n<td align="left">Prepends/Appends \n<code>Stylus</code>\n code to the actual entry file.</td>\n</tr>\n</tbody>\n</table>\n<h3 id="stylusoptions"><code>stylusOptions</code><a href="#stylusoptions" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Object|Function</code>\nDefault: <code>{}</code></p>\n<p>You can pass any Stylus specific options to the <code>stylus-loader</code> through the <code>stylusOptions</code> property in the <a href="/configuration/module/#ruleoptions--rulequery">loader options</a>.\nSee the <a href="https://stylus-lang.com/docs/js.html">Stylus documentation</a>.\nOptions in dash-case should use camelCase.</p>\n<h4 id="object"><code>Object</code><a href="#object" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Use an object to pass options through to Stylus.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              stylusOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token comment">/**\n                 * Specify Stylus plugins to use. Plugins may be passed as\n                 * strings instead of importing them in your Webpack config.\n                 *\n                 * @type {(string|Function)[]}\n                 * @default []\n                 */</span>\n                use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nib\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n                <span class="token comment">/**\n                 * Add path(s) to the import lookup paths.\n                 *\n                 * @type {string[]}\n                 * @default []\n                 */</span>\n                include<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'src/styl/config\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n                <span class="token comment">/**\n                 * Import the specified Stylus files/paths.\n                 *\n                 * @type {string[]}\n                 * @default []\n                 */</span>\n                <span class="token keyword">import</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nib\'</span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'src/styl/mixins\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\n                <span class="token comment">/**\n                 * Define Stylus variables or functions.\n                 *\n                 * @type {Array|Object}\n                 * @default {}\n                 */</span>\n                <span class="token comment">// Array is the recommended syntax: [key, value, raw]</span>\n                define<span class="token operator">:</span> <span class="token punctuation">[</span>\n                  <span class="token punctuation">[</span><span class="token string">\'$development\'</span><span class="token punctuation">,</span> process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span> <span class="token operator">===</span> <span class="token string">\'development\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">[</span><span class="token string">\'rawVar\'</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token comment">// Object is deprecated syntax (there is no possibility to specify "raw\')</span>\n                <span class="token comment">// define: {</span>\n                <span class="token comment">//   $development: process.env.NODE_ENV === \'development\',</span>\n                <span class="token comment">//   rawVar: 42,</span>\n                <span class="token comment">// },</span>\n\n                <span class="token comment">/**\n                 * Include regular CSS on @import.\n                 *\n                 * @type {boolean}\n                 * @default false\n                 */</span>\n                includeCSS<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n\n                <span class="token comment">/**\n                 * Resolve relative url()\'s inside imported files.\n                 *\n                 * @see https://stylus-lang.com/docs/js.html#stylusresolveroptions\n                 *\n                 * @type {boolean|Object}\n                 * @default { nocheck: true }\n                 */</span>\n                resolveURL<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n                <span class="token comment">// resolveURL: { nocheck: true },</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function"><code>Function</code><a href="#function" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<p>Allows setting the options passed through to Stylus based off of the loader context.</p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">stylusOptions</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">\'styles/foo.styl\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                    paths<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'absolute/path/c\'</span><span class="token punctuation">,</span> <span class="token string">\'absolute/path/d\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token punctuation">{</span>\n                  paths<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'absolute/path/a\'</span><span class="token punctuation">,</span> <span class="token string">\'absolute/path/b\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token punctuation">}</span><span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="sourcemap"><code>sourceMap</code><a href="#sourcemap" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code></p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/i</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="webpackimporter"><code>webpackImporter</code><a href="#webpackimporter" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>Boolean</code>\nDefault: <code>true</code></p>\n<p>Enables/Disables the default Webpack importer.</p>\n<p>This can improve performance in some cases.\nUse it with caution because aliases and <code>@import</code> at-rules starting with <code>~</code> will not work.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl/i</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              webpackImporter<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="additionaldata"><code>additionalData</code><a href="#additionaldata" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Type: <code>String|Function</code>\nDefault: <code>undefined</code></p>\n<p>Prepends <code>Stylus</code> code before the actual entry file.\nIn this case, the <code>stylus-loader</code> will not override the source but just <strong>prepend</strong> the entry\'s content.</p>\n<p>This is especially useful when some of your Stylus variables depend on the environment:</p>\n<blockquote>\n<p>ℹ Since you\'re injecting code, this will break the source mappings in your entry file. Often there\'s a simpler solution than this, like multiple Stylus entry files.</p>\n</blockquote>\n<h4 id="string"><code>String</code><a href="#string" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              additionalData<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@env: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>process<span class="token punctuation">.</span>env<span class="token punctuation">.</span><span class="token constant">NODE_ENV</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h4 id="function-1"><code>Function</code><a href="#function-1" aria-hidden="true"><span class="icon icon-link"></span></a></h4>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              <span class="token function-variable function">additionalData</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">content<span class="token punctuation">,</span> loaderContext</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n                <span class="token comment">// More information about available properties https://webpack.js.org/api/loaders/</span>\n                <span class="token keyword">const</span> <span class="token punctuation">{</span> resourcePath<span class="token punctuation">,</span> rootContext <span class="token punctuation">}</span> <span class="token operator">=</span> loaderContext<span class="token punctuation">;</span>\n                <span class="token keyword">const</span> relativePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">relative</span><span class="token punctuation">(</span>rootContext<span class="token punctuation">,</span> resourcePath<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n                <span class="token keyword">if</span> <span class="token punctuation">(</span>relativePath <span class="token operator">===</span> <span class="token string">\'styles/foo.styl\'</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n                  <span class="token keyword">return</span> <span class="token string">\'value = 100px\'</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n                <span class="token punctuation">}</span>\n\n                <span class="token keyword">return</span> <span class="token string">\'value 200px\'</span> <span class="token operator">+</span> content<span class="token punctuation">;</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h2 id="examples">Examples<a href="#examples" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<h3 id="normal-usage">Normal usage<a href="#normal-usage" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Chain the <code>stylus-loader</code> with the <a href="/loaders/css-loader/"><code>css-loader</code></a> and the <a href="/loaders/style-loader/"><code>style-loader</code></a> to immediately apply all styles to the DOM.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// creates style nodes from JS strings</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// translates CSS into CommonJS</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// compiles Stylus to CSS</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="source-maps">Source maps<a href="#source-maps" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>To enable sourcemaps for CSS, you\'ll need to pass the <code>sourceMap</code> property in the loader\'s options. If this is not passed, the loader will respect the setting for webpack source maps, set in <code>devtool</code>.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-javascript">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  devtool<span class="token operator">:</span> <span class="token string">\'source-map\'</span><span class="token punctuation">,</span> <span class="token comment">// any "source-map"-like devtool is possible</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              sourceMap<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="using-nib-with-stylus">Using nib with stylus<a href="#using-nib-with-stylus" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// creates style nodes from JS strings</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// translates CSS into CommonJS</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span> <span class="token comment">// compiles Stylus to CSS</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              stylusOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                use<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token function">require</span><span class="token punctuation">(</span><span class="token string">\'nib\'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n                <span class="token keyword">import</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'nib\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="import-json-files">Import JSON files<a href="#import-json-files" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Stylus does not provide resolving capabilities in the <code>json</code> function.\nTherefore webpack resolver does not work for <code>.json</code> files.\nUse <a href="#stylus-resolver"><code>stylus resolver</code></a>.</p>\n<p><strong>index.styl</strong></p>\n<pre><code class="hljs language-styl">// Suppose the file is located here `node_modules/vars/vars.json`\njson(\'vars.json\')\n\n@media queries-small\n  body\n    display nope\n</code></pre>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl$/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              stylusOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                <span class="token comment">// Specify the path. where to find files</span>\n                paths<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'node_modules/vars\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="in-production">In production<a href="#in-production" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Usually, it\'s recommended to extract the style sheets into a dedicated file in production using the <a href="/plugins/mini-css-extract-plugin/">MiniCssExtractPlugin</a>. This way your styles are not dependent on JavaScript.</p>\n<h3 id="webpack-resolver">webpack resolver<a href="#webpack-resolver" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Webpack provides an <a href="/configuration/resolve/">advanced mechanism to resolve files</a>.\nThe <code>stylus-loader</code> applies the webpack resolver when processing queries.\nThus you can import your Stylus modules from <code>node_modules</code>.\nJust prepend them with a <code>~</code> which tells webpack to look up the <a href="/configuration/resolve/#resolvemodules"><code>modules</code></a>.</p>\n<pre><code class="hljs language-styl">@import \'~bootstrap-styl/bootstrap/index.styl\';\n</code></pre>\n<p>It\'s important to only prepend it with <code>~</code>, because <code>~/</code> resolves to the home-directory.\nWebpack needs to distinguish between <code>bootstrap</code> and <code>~bootstrap</code>, because CSS and Styl files have no special syntax for importing relative files.\nWriting <code>@import "file"</code> is the same as <code>@import "./file";</code></p>\n<h3 id="stylus-resolver">Stylus resolver<a href="#stylus-resolver" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>If you specify the <code>paths</code> option, modules will be searched in the given <code>paths</code>.\nThis is Stylus default behavior.</p>\n<p><strong>webpack.config.js</strong></p>\n<pre><code class="hljs language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\n  module<span class="token operator">:</span> <span class="token punctuation">{</span>\n    rules<span class="token operator">:</span> <span class="token punctuation">[</span>\n      <span class="token punctuation">{</span>\n        test<span class="token operator">:</span> <span class="token regex">/\\.styl/</span><span class="token punctuation">,</span>\n        use<span class="token operator">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'style-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'css-loader\'</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            loader<span class="token operator">:</span> <span class="token string">\'stylus-loader\'</span><span class="token punctuation">,</span>\n            options<span class="token operator">:</span> <span class="token punctuation">{</span>\n              stylusOptions<span class="token operator">:</span> <span class="token punctuation">{</span>\n                paths<span class="token operator">:</span> <span class="token punctuation">[</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">\'node_modules\'</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">}</span><span class="token punctuation">;</span></code></pre>\n<h3 id="extracting-style-sheets">Extracting style sheets<a href="#extracting-style-sheets" aria-hidden="true"><span class="icon icon-link"></span></a></h3>\n<p>Bundling CSS with webpack has some nice advantages like referencing images and fonts with hashed urls or <a href="/concepts/hot-module-replacement/">hot module replacement</a> in development. In production, on the other hand, it\'s not a good idea to apply your style sheets depending on JS execution. Rendering may be delayed or even a <a href="https://en.wikipedia.org/wiki/Flash_of_unstyled_content">FOUC</a> might be visible. Thus it\'s often still better to have them as separate files in your final production build.</p>\n<p>There are two possibilities to extract a style sheet from the bundle:</p>\n<ul>\n<li><a href="https://github.com/peerigon/extract-loader"><code>extract-loader</code></a> (simpler, but specialized on the css-loader\'s output)</li>\n<li><a href="/plugins/mini-css-extract-plugin/">MiniCssExtractPlugin</a> (more complex, but works in all use-cases)</li>\n</ul>\n<h2 id="contributing">Contributing<a href="#contributing" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p>Please take a moment to read our contributing guidelines if you haven\'t yet done so.</p>\n<p><a href="https://github.com/webpack-contrib/stylus-loader/blob/master/.github/CONTRIBUTING.md">CONTRIBUTING</a></p>\n<h2 id="license">License<a href="#license" aria-hidden="true"><span class="icon icon-link"></span></a></h2>\n<p><a href="https://github.com/webpack-contrib/stylus-loader/blob/master/LICENSE">MIT</a></p>\n'}}]);